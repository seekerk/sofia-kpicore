apply plugin: "java"
//apply plugin: "application"
apply plugin: 'maven'

group = 'com.github.seekerk'
version = 0.7

repositories {
    mavenCentral()
}

sourceSets {
    core
    gui
}

def mainClassName = "sofia_kp.KP_GUI"

sourceSets.all { set ->
    def jarTask = task("${set.name}Jar", type: Jar) {
        baseName = "$set.name"
        from set.output
        if ("${set.name}".compareTo("core") == 0) {
            from { configurations."${set.name}Compile".collect { it.isDirectory() ? it : zipTree(it) } }
        }
        if ("${set.name}".compareTo("gui") == 0) {
            manifest.attributes("Main-Class": mainClassName);
        }
    }

    def sourceTask = task("${set.name}SourcesJar", type: Jar, dependsOn: "classes") {
        baseName = "$set.name"
        classifier = 'sources'
        from sourceSets."${set.name}".allSource
    }

    def javadocTask = task("${set.name}JavadocJar", type: Jar, dependsOn: "javadoc") {
        baseName = "$set.name"
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives jarTask
        archives sourceTask
        archives javadocTask
    }
}

dependencies {
    // https://mvnrepository.com/artifact/org.jdom/jdom2
    coreCompile group: 'org.jdom', name: 'jdom2', version: '2.0.6'
    // https://mvnrepository.com/artifact/com.hp.hpl.jena/jena
    guiCompile group: 'com.hp.hpl.jena', name: 'jena', version: '2.6.4'

    guiCompile sourceSets.core.output
    runtime configurations.coreRuntime
    runtime configurations.guiRuntime
}

jar {
    manifest.attributes("Main-Class": mainClassName);
    from sourceSets.core.output
    from sourceSets.gui.output
}

task fatJar(type: Jar) {
    manifest.attributes("Main-Class": mainClassName);
    baseName = project.name + '-all'
    from { configurations.coreCompile.collect { it.isDirectory() ? it : zipTree(it) } }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

// To specify a license in the pom:
install {
  repositories.mavenInstaller {
	addFilter('core') { artifact, file -> artifact.name.endsWith('core') }
	addFilter('gui') { artifact, file -> artifact.name.endsWith('gui') }
    pom.project {
      licenses {
        license {
          name 'The Apache Software License, Version 2.0'
          url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          distribution 'repo'
        }
      }
    }
  }
}

defaultTasks 'clean', 'build'
